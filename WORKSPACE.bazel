load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

BAZEL_BOOTLIN_COMMIT = "4ded1105ba0e2060003e6ac2660ff57815fe0296"

http_archive(
    name = "bazel_bootlin",
    sha256 = "197a5408d571aa5b95001a9091c06aec55451bbd9b696d37dad122396b9d5652",
    strip_prefix = "bazel_bootlin-{commit}".format(commit = BAZEL_BOOTLIN_COMMIT),
    url = "https://github.com/oliverlee/bazel_bootlin/archive/{commit}.tar.gz".format(
        commit = BAZEL_BOOTLIN_COMMIT,
    ),
)

load("@bazel_bootlin//:defs.bzl", "bootlin_toolchain")

# for mapping from buildroot version to gcc version
# see https://toolchains.bootlin.com/releases_x86-64.html
#
bootlin_toolchain(
    name = "gcc_12_2_toolchain",
    architecture = "x86-64",
    buildroot_version = "2022.08-1_bleeding",
    extra_cxxflags = [
        "-std=c++23",
        "-fdiagnostics-color=always",
        "-Werror",
        "-Wall",
        "-Wextra",
        "-Wpedantic",
        "-Wconversion",
        "-Wshadow",
        "-Wnon-virtual-dtor",
        "-Wold-style-cast",
        "-Wcast-align",
        "-Wunused",
        "-Woverloaded-virtual",
        "-Wmisleading-indentation",
        "-Wnull-dereference",
        "-Wdouble-promotion",
        "-Wformat=2",
        "-Wimplicit-fallthrough",
        "-Wduplicated-cond",
        "-Wduplicated-branches",
        "-Wlogical-op",
        "-Wuseless-cast",
    ],
)

register_toolchains(
    "@{toolchain_name}//:toolchain".format(toolchain_name = "gcc_12_2_toolchain"),
)

HIP_CPU_VERSION = "06186c545308173babda129d6f0cb795b322a5c7"

http_archive(
    name = "hip_cpu",
    build_file = "//:third_party/hip_cpu.BUILD.bazel",
    sha256 = "e76b3c35e380971439268a8f8bff5adaa4fadfb5b45d76e3c919dee884988d83",
    strip_prefix = "HIP-CPU-%s" % HIP_CPU_VERSION,
    url = "https://github.com/ROCm-Developer-Tools/HIP-CPU/archive/%s.tar.gz" % HIP_CPU_VERSION,
)

ONETBB_VERSION = "2021.9.0"

http_archive(
    name = "onetbb",
    sha256 = "1ce48f34dada7837f510735ff1172f6e2c261b09460e3bf773b49791d247d24e",
    strip_prefix = "oneTBB-%s" % ONETBB_VERSION,
    url = "https://github.com/oneapi-src/oneTBB/archive/refs/tags/v%s.tar.gz" % ONETBB_VERSION,
)

BAZEL_TOOLCHAIN_COMMIT = "41ff2a05c0beff439bad7acfd564e6827e34b13b"

http_archive(
    name = "bazel_toolchain",
    sha256 = "52b09a61b9a03f4e0994402243a03018a858da6a5774de898f99e344520e9a25",
    strip_prefix = "bazel-toolchain-{commit}".format(commit = BAZEL_TOOLCHAIN_COMMIT),
    url = "https://github.com/grailbio/bazel-toolchain/archive/{commit}.tar.gz".format(
        commit = BAZEL_TOOLCHAIN_COMMIT,
    ),
)

load("@bazel_toolchain//toolchain:deps.bzl", "bazel_toolchain_dependencies")
load("@bazel_toolchain//toolchain:rules.bzl", "llvm_toolchain")

bazel_toolchain_dependencies()

llvm_toolchain(
    name = "llvm_16_0_toolchain",
    cxx_flags = {
        "linux-x86_64": [
            "-std=c++2b",
            "-stdlib=libstdc++",
            #"--sysroot=external/gcc_12_2_toolchain_files/x86_64-buildroot-linux-gnu/sysroot",
        ],
    },
    stdlib = {
        "linux-x86_64": "stdc++",
    },
    llvm_version = "16.0.0",
#    cxx_builtin_include_directories = {
#        "linux-x86_64": [
#            "external/gcc_12_2_toolchain_files/x86_64-buildroot-linux-gnu/include/c++/12.2.0",
#            "external/gcc_12_2_toolchain_files/x86_64-buildroot-linux-gnu/include/c++/12.2.0/x86_64-buildroot-linux_gnu",
#        ],
#    },
    sysroot = {
        "linux-x86_64": "@gcc_12_2_toolchain_files",
    },
)

#register_toolchains(
#    "@{toolchain_name}//:cc-toolchain-x86_64-linux".format(toolchain_name = "llvm_16_0_toolchain"),
#)

BAZEL_CLANG_TIDY_COMMIT = "674fac7640ae0469b7a58017018cb1497c26e2bf"

http_archive(
    name = "bazel_clang_tidy",
    sha256 = "72756cb8111d32d406a819b4d1fb65f7c90c935e8f846dc79c2da270856cf8d9",
    strip_prefix = "bazel_clang_tidy-{commit}".format(commit = BAZEL_CLANG_TIDY_COMMIT),
    url = "https://github.com/erenon/bazel_clang_tidy/archive/{commit}.tar.gz".format(
        commit = BAZEL_CLANG_TIDY_COMMIT,
    ),
)
