load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

BAZEL_BOOTLIN_COMMIT = "22ee91e01bbbc0711444c49102e92010fc6d6c95"

http_archive(
    name = "bazel_bootlin",
    sha256 = "3acd4ebca797fb05db00b1ebcac831fa920f503dd611c255c7f80cfad944182e",
    strip_prefix = "bazel_bootlin-%s" % BAZEL_BOOTLIN_COMMIT,
    url = "https://github.com/oliverlee/bazel_bootlin/archive/%s.tar.gz" % BAZEL_BOOTLIN_COMMIT,
)

load("@bazel_bootlin//:defs.bzl", "bootlin_toolchain")

# for mapping from buildroot version to gcc version
# see https://toolchains.bootlin.com/releases_x86-64.html
#
bootlin_toolchain(
    name = "gcc_12_2_toolchain",
    architecture = "x86-64",
    buildroot_version = "2022.08-1_bleeding",
    extra_cxxflags = [
        "-std=c++23",
        "-march=native",
        "-fdiagnostics-color=always",
        "-Werror",
        "-Wall",
        "-Wextra",
        "-Wpedantic",
        "-Wconversion",
        "-Wshadow",
        "-Wnon-virtual-dtor",
        "-Wold-style-cast",
        "-Wcast-align",
        "-Wunused",
        "-Woverloaded-virtual",
        "-Wmisleading-indentation",
        "-Wnull-dereference",
        "-Wdouble-promotion",
        "-Wformat=2",
        "-Wimplicit-fallthrough",
        "-Wduplicated-cond",
        "-Wduplicated-branches",
        "-Wlogical-op",
        "-Wuseless-cast",
    ],
)

register_toolchains("@gcc_12_2_toolchain//:toolchain")

BOOST_UT_VERSION = "e53a47d37bc594e80bd5f1b8dc1ade8dce4429d3"

http_archive(
    name = "boost_ut",
    build_file_content = """
load("@rules_cc//cc:defs.bzl", "cc_library")

cc_library(
    name = "boost_ut",
    hdrs = ["include/boost/ut.hpp"],
    includes = ["include"],
    visibility = ["//visibility:public"],
)
""",
    sha256 = "abc90fa389a47504d06a88a56ddc9e580cf2654173bd14d211db714bb111b923",
    strip_prefix = "ut-%s" % BOOST_UT_VERSION,
    url = "https://github.com/boost-ext/ut/archive/%s.tar.gz" % BOOST_UT_VERSION,
)

BAZEL_TOOLCHAIN_VERSION = "41ff2a05c0beff439bad7acfd564e6827e34b13b"

http_archive(
    name = "bazel_toolchain",
    sha256 = "52b09a61b9a03f4e0994402243a03018a858da6a5774de898f99e344520e9a25",
    strip_prefix = "bazel-toolchain-%s" % BAZEL_TOOLCHAIN_VERSION,
    url = "https://github.com/grailbio/bazel-toolchain/archive/%s.tar.gz" % BAZEL_TOOLCHAIN_VERSION,
)

load("@bazel_toolchain//toolchain:deps.bzl", "bazel_toolchain_dependencies")
load("@bazel_toolchain//toolchain:rules.bzl", "llvm_toolchain")

bazel_toolchain_dependencies()

llvm_toolchain(
    name = "llvm_16_0_toolchain",
    llvm_version = "16.0.0",
)

BAZEL_CLANG_FORMAT_VERSION = "f4198b68887699a4d1862e44458e4969ad69fc8a"

http_archive(
    name = "bazel_clang_format",
    sha256 = "bd75df6dae8d290a716e1812c463ef4ab36869b5557d8a6dd6abb8315acfc6ac",
    strip_prefix = "bazel_clang_format-%s" % BAZEL_CLANG_FORMAT_VERSION,
    url = "https://github.com/oliverlee/bazel_clang_format/archive/%s.tar.gz" % BAZEL_CLANG_FORMAT_VERSION,
)

http_archive(
    name = "buildifier_prebuilt",
    sha256 = "e46c16180bc49487bfd0f1ffa7345364718c57334fa0b5b67cb5f27eba10f309",
    strip_prefix = "buildifier-prebuilt-6.1.0",
    urls = [
        "https://github.com/keith/buildifier-prebuilt/archive/6.1.0.tar.gz",
    ],
)

load("@buildifier_prebuilt//:deps.bzl", "buildifier_prebuilt_deps")

buildifier_prebuilt_deps()

load("@bazel_skylib//:workspace.bzl", "bazel_skylib_workspace")

bazel_skylib_workspace()

load("@buildifier_prebuilt//:defs.bzl", "buildifier_prebuilt_register_toolchains")

buildifier_prebuilt_register_toolchains()
